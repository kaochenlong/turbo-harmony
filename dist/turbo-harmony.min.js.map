{"version":3,"file":"turbo-harmony.min.js","sources":["../src/index.js"],"sourcesContent":["/**\n * TurboHarmony - Alpine.js + Turbo Integration\n *\n * A comprehensive adapter that ensures Alpine.js components work seamlessly\n * with Turbo Drive, Turbo Stream, and Turbo Frame updates.\n *\n * @author TurboHarmony Contributors\n * @version 1.0.0\n * @license MIT\n */\n\nclass TurboHarmony {\n  constructor(options = {}) {\n    this.options = {\n      // Debug and logging\n      debug: false,\n      // @if DEBUG\n      logLevel: 'warn', // 'debug', 'info', 'warn', 'error'\n      // @endif\n\n      // State management\n      preserveState: false,\n      preserveStateSelectors: ['[x-data]'],\n\n      // Element filtering\n      skipSelectors: [\n        '.turbo-harmony-skip',\n        '.no-alpine',\n        '[data-turbo-harmony-skip]'\n      ],\n\n      // Performance options\n      reinitDelay: 0, // ms delay before reinitializing\n      batchUpdates: true,\n\n      // Lifecycle hooks\n      beforeReinit: null,      // (element) => {}\n      afterReinit: null,       // (element) => {}\n      onError: null,           // (error, context) => {}\n\n      // Advanced options\n      watchAttributes: ['x-data', 'x-show', 'x-if', 'x-for'],\n      autoStart: true,\n\n      ...options\n    }\n\n    // @if DEBUG\n    // Performance and debugging metrics\n    this.metrics = {\n      streamUpdates: 0,\n      frameUpdates: 0,\n      driveNavigation: 0,\n      reinitializations: 0,\n      errors: 0,\n      performance: [],\n      startTime: performance.now()\n    }\n    // @endif\n\n    // Internal state\n    this.isInitialized = false\n    this.preservedStates = new WeakMap()\n    this.initializedElements = new WeakSet()\n    \n    // @if DEBUG\n    this.componentLifecycle = new Map()\n    // @endif\n\n    // Bind methods to maintain context\n    this.handleBeforeVisit = this.handleBeforeVisit.bind(this)\n    this.handleLoad = this.handleLoad.bind(this)\n    this.handleBeforeStreamRender = this.handleBeforeStreamRender.bind(this)\n    this.handleStreamRender = this.handleStreamRender.bind(this)\n    this.handleBeforeFrameRender = this.handleBeforeFrameRender.bind(this)\n    this.handleFrameRender = this.handleFrameRender.bind(this)\n    this.handleError = this.handleError.bind(this)\n\n    if (this.options.autoStart) {\n      this.init()\n    }\n  }\n\n  /**\n   * Initialize TurboHarmony\n   * Validates dependencies and sets up event listeners\n   */\n  init() {\n    if (this.isInitialized) {\n      this.log('warn', 'TurboHarmony already initialized')\n      return this\n    }\n\n    this.validateDependencies()\n    this.setupEventListeners()\n\n    this.isInitialized = true\n    this.log('info', 'TurboHarmony initialized successfully', {\n      options: this.options,\n      version: '1.0.0'\n    })\n\n    return this\n  }\n\n  /**\n   * Validate that required dependencies are available\n   */\n  validateDependencies() {\n    if (typeof window === 'undefined') {\n      throw new Error('TurboHarmony: window object not available')\n    }\n\n    if (!window.Alpine) {\n      throw new Error('TurboHarmony: Alpine.js not found. Please ensure Alpine.js is loaded before TurboHarmony.')\n    }\n\n    if (!window.Turbo) {\n      throw new Error('TurboHarmony: Turbo not found. Please ensure @hotwired/turbo is loaded before TurboHarmony.')\n    }\n\n    this.log('debug', 'Dependencies validated successfully')\n  }\n\n  /**\n   * Set up all Turbo event listeners\n   */\n  setupEventListeners() {\n    // Turbo Drive events (full page navigation)\n    document.addEventListener('turbo:before-visit', this.handleBeforeVisit)\n    document.addEventListener('turbo:load', this.handleLoad)\n\n    // Turbo Stream events (partial page updates) - Main focus\n    document.addEventListener('turbo:before-stream-render', this.handleBeforeStreamRender)\n    document.addEventListener('turbo:stream-render', this.handleStreamRender)\n\n    // Turbo Frame events (frame-specific updates)\n    document.addEventListener('turbo:before-frame-render', this.handleBeforeFrameRender)\n    document.addEventListener('turbo:frame-render', this.handleFrameRender)\n\n    // Error handling\n    window.addEventListener('error', this.handleError)\n    window.addEventListener('unhandledrejection', this.handleError)\n\n    this.log('debug', 'Event listeners registered')\n  }\n\n  /**\n   * Handle Turbo Drive before visit (full page navigation)\n   */\n  handleBeforeVisit(event) {\n    // @if DEBUG\n    this.metrics.driveNavigation++\n    // @endif\n    this.log('debug', 'Turbo Drive: before visit', { location: event.detail.url })\n\n    // Clean up Alpine instances before navigation\n    if (Alpine.destroyTree) {\n      Alpine.destroyTree(document.body)\n    }\n  }\n\n  /**\n   * Handle Turbo Drive load (after page navigation)\n   */\n  handleLoad(event) {\n    this.log('debug', 'Turbo Drive: load complete')\n\n    // Only reinitialize DOM tree, don't call Alpine.start() again\n    if (Alpine.initTree) {\n      Alpine.initTree(document.body)\n    }\n  }\n\n  /**\n   * Handle before Turbo Stream render\n   */\n  handleBeforeStreamRender(event) {\n    this.log('debug', 'Turbo Stream: before render', {\n      action: event.detail?.action,\n      target: event.detail?.target\n    })\n\n    // @if PRESERVE_STATE\n    // Prepare for Stream update\n    const targetElement = this.findTargetElement(event)\n    if (targetElement && this.options.preserveState) {\n      this.preserveAlpineState(targetElement)\n    }\n    // @endif\n  }\n\n  /**\n   * Handle Turbo Stream render (after partial update)\n   * This is the core functionality for Stream integration\n   */\n  handleStreamRender(event) {\n    // @if DEBUG\n    const startTime = performance.now()\n    this.metrics.streamUpdates++\n    // @endif\n\n    try {\n      const targetElement = this.findTargetElement(event)\n\n      if (!targetElement) {\n        this.log('warn', 'Turbo Stream: target element not found', event.detail)\n        return\n      }\n\n      this.log('debug', 'Turbo Stream: render detected', {\n        action: event.detail?.action,\n        target: targetElement.tagName,\n        id: targetElement.id,\n        classes: targetElement.className\n      })\n\n      // Check if we should skip this element\n      if (this.shouldSkipElement(targetElement)) {\n        this.log('debug', 'Turbo Stream: skipping element due to skip selector')\n        return\n      }\n\n      // Perform Alpine reinitialization\n      this.reinitializeAlpineInElement(targetElement)\n\n      // @if DEBUG\n      // Record performance\n      const endTime = performance.now()\n      this.metrics.performance.push(endTime - startTime)\n      // @endif\n\n    } catch (error) {\n      this.handleError(error, 'handleStreamRender')\n    }\n  }\n\n  /**\n   * Handle before Turbo Frame render\n   */\n  handleBeforeFrameRender(event) {\n    this.log('debug', 'Turbo Frame: before render', { frame: event.target.id })\n\n    // @if DEBUG\n    // Clean up tracking for elements that will be removed\n    const frameElement = event.target\n    if (frameElement) {\n      const alpineElements = frameElement.querySelectorAll('[x-data]')\n      alpineElements.forEach(el => {\n        this.initializedElements.delete(el)\n        this.trackComponentLifecycle(el, 'beforeDestroy')\n      })\n    }\n    // @endif\n  }\n\n  /**\n   * Handle Turbo Frame render\n   */\n  handleFrameRender(event) {\n    // @if DEBUG\n    this.metrics.frameUpdates++\n    // @endif\n    const frameElement = event.target\n\n    this.log('debug', 'Turbo Frame: render complete', { frame: frameElement.id })\n\n    // Reinitialize Alpine within the frame\n    if (!this.shouldSkipElement(frameElement)) {\n      this.reinitializeAlpineInElement(frameElement)\n    }\n  }\n\n  /**\n   * Find the target element from a Turbo event\n   */\n  findTargetElement(event) {\n    // Try multiple ways to find the target element\n    return event.target ||\n           event.detail?.target ||\n           (event.detail?.selector && document.querySelector(event.detail.selector)) ||\n           null\n  }\n\n  /**\n   * Check if an element should be skipped for Alpine reinitialization\n   */\n  shouldSkipElement(element) {\n    if (!element || !element.matches) return true\n\n    return this.options.skipSelectors.some(selector => {\n      try {\n        return element.matches(selector)\n      } catch (e) {\n        this.log('warn', `Invalid skip selector: ${selector}`, e)\n        return false\n      }\n    })\n  }\n\n  /**\n   * Reinitialize Alpine.js for a specific element\n   * This is the core method that makes the magic happen\n   */\n  reinitializeAlpineInElement(element) {\n    // @if DEBUG\n    this.metrics.reinitializations++\n    // @endif\n\n    try {\n      this.log('debug', 'Reinitializing Alpine in element', {\n        tag: element.tagName,\n        id: element.id,\n        classes: element.className\n      })\n\n      // Execute beforeReinit hook\n      if (this.options.beforeReinit) {\n        this.options.beforeReinit(element)\n      }\n\n      // @if PRESERVE_STATE\n      // Preserve state if enabled\n      if (this.options.preserveState) {\n        this.preserveAlpineState(element)\n      }\n      // @endif\n\n      // Track initialized elements to prevent double initialization\n      const alpineElements = element.querySelectorAll('[x-data]')\n      const elementsToInit = []\n\n      alpineElements.forEach(el => {\n        // Skip if already initialized and still connected\n        if (el._x_dataStack && el._x_dataStack.length > 0 && this.initializedElements.has(el)) {\n          this.log('debug', 'Skipping already initialized element', {\n            id: el.id,\n            classes: el.className\n          })\n          // @if DEBUG\n          this.trackComponentLifecycle(el, 'skipped')\n          // @endif\n          return\n        }\n        elementsToInit.push(el)\n        // @if DEBUG\n        this.trackComponentLifecycle(el, 'queued')\n        // @endif\n      })\n\n      // Only destroy and reinit if there are uninitialized elements\n      if (elementsToInit.length > 0) {\n        // Destroy existing Alpine instances within the element\n        if (Alpine.destroyTree) {\n          Alpine.destroyTree(element)\n        }\n\n        // Reinitialize Alpine\n        const reinit = () => {\n          if (Alpine.initTree) {\n            Alpine.initTree(element)\n          } else if (Alpine.start) {\n            // Fallback for older Alpine versions\n            Alpine.start()\n          }\n\n          // Mark elements as initialized\n          elementsToInit.forEach(el => {\n            this.initializedElements.add(el)\n            // @if DEBUG\n            this.trackComponentLifecycle(el, 'initialized')\n            // @endif\n          })\n\n          // @if PRESERVE_STATE\n          // Restore state if preserved\n          if (this.options.preserveState) {\n            this.restoreAlpineState(element)\n          }\n          // @endif\n\n          // Execute afterReinit hook\n          if (this.options.afterReinit) {\n            this.options.afterReinit(element)\n          }\n\n          this.log('debug', 'Alpine reinitialization complete', {\n            initialized: elementsToInit.length\n          })\n        }\n\n        // Apply delay if configured\n        if (this.options.reinitDelay > 0) {\n          setTimeout(reinit, this.options.reinitDelay)\n        } else {\n          reinit()\n        }\n      } else {\n        // No x-data elements found inside, check if parent has x-data\n        // This handles the common pattern where a parent element has x-data\n        // and child Turbo Frames contain only Alpine directives (x-on:*, x-model, etc.)\n        const parentWithData = element.closest('[x-data]')\n\n        if (parentWithData) {\n          // Found parent with x-data, reinitialize from parent to ensure\n          // child directives can access the Alpine component context\n          this.log('debug', 'Found parent with x-data, reinitializing from parent')\n\n          const reinit = () => {\n            if (Alpine.destroyTree) {\n              Alpine.destroyTree(parentWithData)\n            }\n\n            if (Alpine.initTree) {\n              Alpine.initTree(parentWithData)\n            }\n\n            // Execute afterReinit hook\n            if (this.options.afterReinit) {\n              this.options.afterReinit(element)\n            }\n\n            this.log('debug', 'Alpine reinitialization from parent complete')\n          }\n\n          // Apply delay if configured\n          if (this.options.reinitDelay > 0) {\n            setTimeout(reinit, this.options.reinitDelay)\n          } else {\n            reinit()\n          }\n        } else {\n          // No parent with x-data, just try to initialize the element itself\n          this.log('debug', 'No x-data found in parent chain, initializing element directly')\n\n          const reinit = () => {\n            if (Alpine.initTree) {\n              Alpine.initTree(element)\n            }\n\n            // Execute afterReinit hook\n            if (this.options.afterReinit) {\n              this.options.afterReinit(element)\n            }\n\n            this.log('debug', 'Alpine directive initialization complete')\n          }\n\n          // Apply delay if configured\n          if (this.options.reinitDelay > 0) {\n            setTimeout(reinit, this.options.reinitDelay)\n          } else {\n            reinit()\n          }\n        }\n      }\n\n    } catch (error) {\n      this.handleError(error, 'reinitializeAlpineInElement')\n    }\n  }\n\n  // @if PRESERVE_STATE\n  /**\n   * Preserve Alpine component state before reinitialization\n   */\n  preserveAlpineState(element) {\n    try {\n      const alpineElements = element.querySelectorAll(this.options.preserveStateSelectors.join(','))\n      const states = new Map()\n\n      alpineElements.forEach(el => {\n        // Access Alpine's internal data stack\n        if (el._x_dataStack && el._x_dataStack.length > 0) {\n          try {\n            const state = this.safeStringify(el._x_dataStack[0])\n            states.set(this.getElementKey(el), JSON.parse(state))\n          } catch (e) {\n            this.log('warn', 'Failed to preserve state for element', e)\n          }\n        }\n      })\n\n      this.preservedStates.set(element, states)\n      this.log('debug', `Preserved state for ${states.size} Alpine components`)\n\n    } catch (error) {\n      this.handleError(error, 'preserveAlpineState')\n    }\n  }\n\n  /**\n   * Restore Alpine component state after reinitialization\n   */\n  restoreAlpineState(element) {\n    try {\n      const savedStates = this.preservedStates.get(element)\n      if (!savedStates) return\n\n      // Wait a tick for Alpine to fully initialize\n      setTimeout(() => {\n        const alpineElements = element.querySelectorAll(this.options.preserveStateSelectors.join(','))\n\n        alpineElements.forEach(el => {\n          const key = this.getElementKey(el)\n          const savedState = savedStates.get(key)\n\n          if (savedState && el._x_dataStack && el._x_dataStack.length > 0) {\n            try {\n              // Only restore properties that exist and are writable\n              const currentData = el._x_dataStack[0]\n              Object.keys(savedState).forEach(prop => {\n                const descriptor = Object.getOwnPropertyDescriptor(currentData, prop)\n                // Skip getters/setters and non-writable properties\n                if (!descriptor || (descriptor.set || descriptor.writable !== false)) {\n                  try {\n                    currentData[prop] = savedState[prop]\n                  } catch (e) {\n                    this.log('debug', `Skipped non-writable property: ${prop}`)\n                  }\n                }\n              })\n              this.log('debug', 'Restored state for element', key)\n            } catch (e) {\n              this.log('warn', 'Failed to restore state for element', e)\n            }\n          }\n        })\n\n        // Clean up\n        this.preservedStates.delete(element)\n      }, 10)\n\n    } catch (error) {\n      this.handleError(error, 'restoreAlpineState')\n    }\n  }\n\n  /**\n   * Generate a unique key for an element (for state preservation)\n   */\n  getElementKey(element) {\n    return element.id ||\n           element.getAttribute('data-key') ||\n           `${element.tagName}-${Array.from(element.parentNode.children).indexOf(element)}`\n  }\n\n  /**\n   * Safe JSON stringify that handles circular references and non-serializable values\n   */\n  safeStringify(obj) {\n    const seen = new WeakSet()\n\n    return JSON.stringify(obj, (key, value) => {\n      // Skip DOM elements and other non-serializable browser objects\n      if (value instanceof HTMLElement ||\n          value instanceof Window ||\n          value instanceof Document ||\n          value instanceof Event) {\n        return undefined\n      }\n\n      // Skip functions\n      if (typeof value === 'function') {\n        return undefined\n      }\n\n      // Skip properties that start with _ (often internal/private)\n      if (typeof key === 'string' && key.startsWith('_')) {\n        return undefined\n      }\n\n      // Handle circular references\n      if (typeof value === 'object' && value !== null) {\n        if (seen.has(value)) {\n          return undefined\n        }\n        seen.add(value)\n      }\n\n      return value\n    })\n  }\n  // @endif\n\n  /**\n   * Enhanced logging system with levels and formatting\n   */\n  log(level, message, data = null) {\n    if (!this.options.debug) return\n\n    // @if DEBUG\n    const levels = { debug: 0, info: 1, warn: 2, error: 3 }\n    const currentLevel = levels[this.options.logLevel] || 1\n\n    if (levels[level] >= currentLevel) {\n      const timestamp = new Date().toISOString()\n      const prefix = `[TurboHarmony ${timestamp}]`\n      const method = level === 'error' ? 'error' :\n                     level === 'warn' ? 'warn' :\n                     level === 'info' ? 'info' : 'log'\n\n      if (data) {\n        console[method](prefix, message, data)\n      } else {\n        console[method](prefix, message)\n      }\n    }\n    // @else\n    if (level === 'error' || level === 'warn') {\n      console[level]('[TurboHarmony]', message, data || '')\n    }\n    // @endif\n  }\n\n  /**\n   * Centralized error handling\n   */\n  handleError(error, context = '') {\n    // @if DEBUG\n    this.metrics.errors++\n    // @endif\n\n    const errorInfo = {\n      message: error.message || error,\n      context,\n      timestamp: new Date().toISOString(),\n      // @if DEBUG\n      metrics: this.getMetrics()\n      // @endif\n    }\n\n    this.log('error', `TurboHarmony error in ${context}:`, errorInfo)\n\n    // Execute custom error handler if provided\n    if (this.options.onError) {\n      try {\n        this.options.onError(error, errorInfo)\n      } catch (handlerError) {\n        console.error('[TurboHarmony] Error in custom error handler:', handlerError)\n      }\n    }\n  }\n\n  // @if DEBUG\n  /**\n   * Track component lifecycle events\n   */\n  trackComponentLifecycle(element, event) {\n    const key = this.getElementKey(element)\n    const timestamp = performance.now()\n\n    if (!this.componentLifecycle.has(key)) {\n      this.componentLifecycle.set(key, [])\n    }\n\n    this.componentLifecycle.get(key).push({\n      event,\n      timestamp,\n      element: {\n        id: element.id,\n        classes: element.className,\n        tag: element.tagName\n      }\n    })\n  }\n\n  /**\n   * Get lifecycle report for debugging\n   */\n  getLifecycleReport() {\n    const report = []\n    this.componentLifecycle.forEach((events, key) => {\n      report.push({\n        component: key,\n        events: events,\n        totalEvents: events.length,\n        duplicateInits: events.filter(e => e.event === 'initialized').length - 1\n      })\n    })\n    return report\n  }\n\n  /**\n   * Get performance and usage metrics\n   */\n  getMetrics() {\n    const uptime = performance.now() - this.metrics.startTime\n    const avgPerformance = this.metrics.performance.length > 0\n      ? this.metrics.performance.reduce((a, b) => a + b) / this.metrics.performance.length\n      : 0\n\n    return {\n      ...this.metrics,\n      uptime: Math.round(uptime),\n      averageReinitTime: Math.round(avgPerformance * 100) / 100,\n      successRate: this.metrics.errors === 0 ? 100 :\n        Math.round((1 - this.metrics.errors / (this.metrics.streamUpdates + this.metrics.frameUpdates + this.metrics.driveNavigation)) * 100),\n      totalComponents: this.componentLifecycle.size,\n      lifecycleReport: this.getLifecycleReport()\n    }\n  }\n\n  /**\n   * Reset metrics (useful for testing and debugging)\n   */\n  resetMetrics() {\n    this.metrics = {\n      streamUpdates: 0,\n      frameUpdates: 0,\n      driveNavigation: 0,\n      reinitializations: 0,\n      errors: 0,\n      performance: [],\n      startTime: performance.now()\n    }\n\n    this.log('info', 'Metrics reset')\n  }\n  // @endif\n\n  /**\n   * Manually reinitialize Alpine for the entire document\n   * Useful for debugging or manual intervention\n   */\n  reinitializeAll() {\n    this.log('info', 'Manual reinitialization triggered')\n    this.reinitializeAlpineInElement(document.body)\n  }\n\n  /**\n   * Destroy TurboHarmony and clean up event listeners\n   */\n  destroy() {\n    document.removeEventListener('turbo:before-visit', this.handleBeforeVisit)\n    document.removeEventListener('turbo:load', this.handleLoad)\n    document.removeEventListener('turbo:before-stream-render', this.handleBeforeStreamRender)\n    document.removeEventListener('turbo:stream-render', this.handleStreamRender)\n    document.removeEventListener('turbo:before-frame-render', this.handleBeforeFrameRender)\n    document.removeEventListener('turbo:frame-render', this.handleFrameRender)\n    window.removeEventListener('error', this.handleError)\n    window.removeEventListener('unhandledrejection', this.handleError)\n\n    this.isInitialized = false\n    this.log('info', 'TurboHarmony destroyed')\n  }\n}\n\n// Export for different module systems\nexport default TurboHarmony\nexport { TurboHarmony }\n\n// Global assignment for non-module usage\nif (typeof window !== 'undefined') {\n  window.TurboHarmony = TurboHarmony\n}"],"names":["TurboHarmony","constructor","options","this","debug","logLevel","preserveState","preserveStateSelectors","skipSelectors","reinitDelay","batchUpdates","beforeReinit","afterReinit","onError","watchAttributes","autoStart","metrics","streamUpdates","frameUpdates","driveNavigation","reinitializations","errors","performance","startTime","now","isInitialized","preservedStates","WeakMap","initializedElements","WeakSet","componentLifecycle","Map","handleBeforeVisit","bind","handleLoad","handleBeforeStreamRender","handleStreamRender","handleBeforeFrameRender","handleFrameRender","handleError","init","log","validateDependencies","setupEventListeners","version","window","Error","Alpine","Turbo","document","addEventListener","event","location","detail","url","destroyTree","body","initTree","action","target","targetElement","findTargetElement","preserveAlpineState","tagName","id","classes","className","shouldSkipElement","reinitializeAlpineInElement","endTime","push","error","frame","frameElement","querySelectorAll","forEach","el","delete","trackComponentLifecycle","selector","querySelector","element","matches","some","e","tag","alpineElements","elementsToInit","_x_dataStack","length","has","reinit","start","add","restoreAlpineState","initialized","setTimeout","parentWithData","closest","join","states","state","safeStringify","set","getElementKey","JSON","parse","size","savedStates","get","key","savedState","currentData","Object","keys","prop","descriptor","getOwnPropertyDescriptor","writable","getAttribute","Array","from","parentNode","children","indexOf","obj","seen","stringify","value","HTMLElement","Window","Document","Event","startsWith","level","message","data","levels","info","warn","currentLevel","prefix","Date","toISOString","method","console","context","errorInfo","timestamp","getMetrics","handlerError","getLifecycleReport","report","events","component","totalEvents","duplicateInits","filter","uptime","avgPerformance","reduce","a","b","Math","round","averageReinitTime","successRate","totalComponents","lifecycleReport","resetMetrics","reinitializeAll","destroy","removeEventListener"],"mappings":"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"}